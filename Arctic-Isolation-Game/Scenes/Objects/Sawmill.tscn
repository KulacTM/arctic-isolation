[gd_scene load_steps=7 format=2]

[ext_resource path="res://GFX/Objects/bed.png" type="Texture" id=1]
[ext_resource path="res://Scenes/UI/Press_E.tscn" type="PackedScene" id=2]
[ext_resource path="res://SFX/Effects/log-to-plank.ogg" type="AudioStream" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Area2D

var in_sawmill_zone = false


func _on_body_entered(body):
	$Press_E.visible = true
	in_sawmill_zone = true
	


func _on_body_exited(body):
	$Press_E.visible = false
	in_sawmill_zone = false


func _process(_delta):
	if Input.is_action_just_pressed(\"action\") and in_sawmill_zone:
		if Inventory.items.logs > 0:
			AddPlank()
		else:
			get_tree().call_group(\"Dialogue\", \"NoLogs\")


func AddPlank():
	Inventory.items.planks += 1
	Inventory.items.logs -= 1
	$Saw/Saw_Timer.start()
	$Saw.play()
	get_tree().call_group(\"GUI\", \"LogIcon\")
	get_tree().call_group(\"GUI\", \"PlankIcon\")
#	in_sawmill_zone = false


func _on_Saw_Timer_timeout():
	$Saw.stop()
#	in_sawmill_zone = true
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 104.673, 69.4023 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 65.0883, 31.4708 )

[node name="Sawmill" type="Area2D"]
collision_layer = 2
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Body" type="StaticBody2D" parent="."]
collision_layer = 2

[node name="Sprite" type="Sprite" parent="Body"]
rotation = -1.57079
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Body"]
shape = SubResource( 3 )

[node name="Press_E" parent="." instance=ExtResource( 2 )]
position = Vector2( 0, -59.7036 )
frame = 3

[node name="Saw" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )

[node name="Saw_Timer" type="Timer" parent="Saw"]
wait_time = 0.53
one_shot = true
[connection signal="body_entered" from="." to="." method="_on_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_body_exited"]
[connection signal="timeout" from="Saw/Saw_Timer" to="." method="_on_Saw_Timer_timeout"]
